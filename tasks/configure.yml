# This source file is subject to the (Open Source Initiative) BSD license
# that is bundled with this package in the LICENSE file. It is also available
# through the world-wide-web at this URL: http://www.ontic.com.au/license.html
# If you did not receive a copy of the license and are unable to obtain it through
# the world-wide-web, please send an email to license@ontic.com.au immediately.
# Copyright (c) 2010-2015 Ontic. (http://www.ontic.com.au). All rights reserved.

---

- name: MySQL | Stop MySQL when resizing InnoDB log files.
  sudo: yes
  service:
    name: '{{ mysql_service_name }}'
    state: stopped
  when: mysql_installed.stat.exists == false or mysql_resize_innodb_log_files
  tags:
    - configure
    - mysql

- name: MySQL | Delete InnoDB log files when resizing.
  sudo: yes
  command: rm -f /var/lib/mysql/ib_logfile[01]
  when: mysql_installed.stat.exists == false or mysql_resize_innodb_log_files
  tags:
    - configure
    - mysql

- name: MySQL | Replace the global config file.
  sudo: yes
  template:
    src: '{{ mysql_global_config_template }}'
    dest: '{{ mysql_global_config_file }}'
    force: '{{ "yes" if mysql_installed.stat.exists == false or mysql_global_config_file_refresh else "no" }}'
    owner: root
    group: root
    mode: 0644
  notify: restart mysql
  tags:
    - configure
    - mysql

- name: MySQL | Configure properties in global config file.
  sudo: yes
  ini_file:
    dest: '{{ mysql_global_config_file }}'
    section: '{{ item.section }}'
    option: '{{ item.option | default(omit) }}'
    value: '{{ item.value | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    backup: yes
    owner: root
    group: root
    mode: 0644
  notify: restart mysql
  with_items: mysql_global_config
  when: mysql_global_config
  tags:
    - configure
    - mysql

- name: MySQL | Set ownership of directories.
  sudo: yes
  file:
    path: '{{ item }}'
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
  with_items:
    - '{{ mysql_pid_path }}'
    - '{{ mysql_log_path }}'
  tags:
    - configure
    - mysql

- name: MySQL | Ensure MySQL is started.
  sudo: yes
  service:
    name: '{{ mysql_service_name }}'
    state: started
  tags:
    - configure
    - mysql

- name: MySQL | Retrieve the root user hosts.
  sudo: yes
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = "root" ORDER BY (Host="localhost") ASC'
  register: mysql_root_hosts
  changed_when: false
  tags:
    - configure
    - mysql

- name: MySQL | Update the root user password.
  sudo: yes
  command: mysql -u root -NBe 'SET PASSWORD FOR "{{ mysql_root_username }}"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}");'
  with_items: mysql_root_hosts.stdout_lines
  when: mysql_update_root_password or (mysql_installed_packages is defined and mysql_installed_packages.changed)
  tags:
    - configure
    - mysql

- name: MySQL | Update the root config file with credentials.
  sudo: yes
  template:
    src: '{{ mysql_root_config_template }}'
    dest: '{{ mysql_root_config_file }}'
    owner: root
    group: root
    mode: 0600
  tags:
    - configure
    - mysql

- name: MySQL | Retrieve the anonymous user hosts.
  sudo: yes
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  tags:
    - configure
    - mysql

- name: MySQL | Remove anonymous users.
  sudo: yes
  mysql_user:
    name: ''
    host: '{{ item }}'
    state: absent
  with_items: mysql_anonymous_hosts.stdout_lines
  tags:
    - configure
    - mysql

- name: MySQL | Remove the test database.
  sudo: yes
  mysql_db:
    name: test
    state: absent
  tags:
    - configure
    - mysql

- name: MySQL | Configure users.
  sudo: yes
  mysql_user:
    name: '{{ item.name }}'
    password: '{{ item.password }}'
    host: '{{ item.host | default(omit) }}'
    login_host: '{{ item.login_host | default(omit) }}'
    login_password: '{{ item.login_password | default(omit) }}'
    login_port: '{{ item.login_port | default(omit) }}'
    login_unix_socket: '{{ item.login_unix_socket | default(omit) }}'
    login_user: '{{ item.login_user | default(omit) }}'
    priv: '{{ item.priv | default("*.*:USAGE") }}'
    state: '{{ item.state | default(omit) }}'
  with_items: mysql_users
  when: mysql_users
  tags:
    - configure
    - mysql

- name: MySQL | Configure databases.
  sudo: yes
  mysql_db:
    name: '{{ item.name }}'
    collation: '{{ item.collation | default("utf8_general_ci") }}'
    encoding: '{{ item.encoding | default("utf8") }}'
    login_host: '{{ item.login_host | default(omit) }}'
    login_password: '{{ item.login_password | default(omit) }}'
    login_port: '{{ item.login_port | default(omit) }}'
    login_unix_socket: '{{ item.login_unix_socket | default(omit) }}'
    login_user: '{{ item.login_user | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    target: '{{ item.target | default(omit) }}'
  with_items: mysql_databases
  when: mysql_databases
  tags:
    - configure
    - mysql